{"version":3,"sources":["AppStyle.js","circleStyle.js","GridCircles.js","App.js","index.js"],"names":["useStyle","makeStyles","theme","root","height","backgroundColor","display","flexDirection","alignItems","form","marginBottom","spacing","enter","margin","circle","borderRadius","width","GridCircles","numOfCircles","useState","circles","setCircles","useEffect","rgbAmountOfValues","calcAmountOfValues","rgbValues","calcColorValues","newCircles","genCircles","num","maxAmount","i","reduce","a","b","divider","delta","Math","floor","curValue","push","r","length","g","classes","Grid","container","justifyContent","map","index","item","className","style","App","numCircles","setNumCircles","CssBaseline","Container","maxWidth","Typography","variant","align","gutterBottom","onSubmit","event","preventDefault","TextField","id","label","value","onChange","newNum","parseInt","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8d6881c.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    backgroundColor: \"lightGrey\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(10),\r\n  },\r\n  enter: {\r\n    margin: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default useStyle;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  circle: {\r\n    borderRadius: \"50%\",\r\n    height: \"100px\",\r\n    width: \"100px\",\r\n  },\r\n}));\r\n\r\nexport default useStyle;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport useStyle from \"./circleStyle\";\r\n\r\nconst GridCircles = ({ numOfCircles }) => {\r\n  const [circles, setCircles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const rgbAmountOfValues = calcAmountOfValues(numOfCircles);\r\n    const rgbValues = calcColorValues(rgbAmountOfValues);\r\n    const newCircles = genCircles(numOfCircles, rgbValues);\r\n    setCircles(newCircles);\r\n  }, [numOfCircles]);\r\n\r\n  // compute the amount of rgb values needed\r\n  const calcAmountOfValues = (num) => {\r\n    let rgbAmountOfValues = [2, 2, 2];\r\n    let maxAmount = 8;\r\n    let i = 0;\r\n    while (maxAmount < num) {\r\n      rgbAmountOfValues[i]++;\r\n      maxAmount = rgbAmountOfValues.reduce((a, b) => a * b);\r\n      i = (i + 1) % 3;\r\n    }\r\n    return rgbAmountOfValues;\r\n  };\r\n\r\n  // compute the possible rgb values and return a list with 3 lists of values\r\n  const calcColorValues = (rgbAmountOfValues) => {\r\n    const maxValue = 255;\r\n\r\n    let rgbValues = [[], [], []];\r\n    for (let i = 0; i <= 2; i++) {\r\n      //go through red, green and then blue\r\n      const divider = rgbAmountOfValues[i] - 1;\r\n      const delta = Math.floor(maxValue / divider);\r\n\r\n      for (let curValue = 0; curValue <= maxValue; curValue += delta) {\r\n        rgbValues[i].push(curValue);\r\n      }\r\n    }\r\n    return rgbValues;\r\n  };\r\n\r\n  const genCircles = (numOfCircles, rgbValues) => {\r\n    let circles = [];\r\n    for (let r = 0; r < rgbValues[0].length; r++) {\r\n      for (let g = 0; g < rgbValues[1].length; g++) {\r\n        for (let b = 0; b < rgbValues[2].length; b++) {\r\n          circles.push([rgbValues[0][r], rgbValues[1][g], rgbValues[2][b]]);\r\n\r\n          if (circles.length === numOfCircles) {\r\n            return circles;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const classes = useStyle();\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"flex-start\" alignItems=\"center\">\r\n      {circles.map((circle, index) => {\r\n        return (\r\n          <Grid\r\n            item\r\n            key={index}\r\n            className={classes.circle}\r\n            style={{\r\n              backgroundColor: `rgb(${circle[0]},${circle[1]},${circle[2]})`,\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default GridCircles;\r\n","import React, { useState } from \"react\";\nimport useStyle from \"./AppStyle\";\nimport {\n  CssBaseline,\n  Container,\n  Typography,\n  TextField,\n} from \"@material-ui/core\";\nimport GridCircles from \"./GridCircles\";\n\nconst App = () => {\n  const [numCircles, setNumCircles] = useState(8);\n\n  const handleChange = (event) => {\n    const newNum = parseInt(event.target.value);\n    if (newNum >= 1 && newNum % 1 === 0) {\n      setNumCircles(newNum);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  const classes = useStyle();\n  return (\n    <>\n      <CssBaseline />\n      <Container\n        maxWidth=\"xl\"\n        className={classes.root}\n        style={{ display: \"flex\" }}\n      >\n        <Typography variant=\"h1\" align=\"center\" gutterBottom>\n          Circles\n        </Typography>\n        <form onSubmit={handleSubmit} className={classes.form}>\n          <TextField\n            id=\"numOfCircles\"\n            label=\"numbner of circles\"\n            variant=\"outlined\"\n            value={numCircles}\n            onChange={handleChange}\n            type=\"number\"\n          ></TextField>\n        </form>\n        <GridCircles numOfCircles={numCircles} />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}